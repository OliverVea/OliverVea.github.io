<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0">
    <channel>
        <title>Project - Tag - Oliver Vea</title>
        <link>http://localhost:1313/tags/project/</link>
        <description>Project - Tag - Oliver Vea</description>
        <generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Wed, 27 Dec 2023 00:00:00 &#43;0000</lastBuildDate><atom:link href="http://localhost:1313/tags/project/" rel="self" type="application/rss+xml" /><item>
    <title>Semantic Search with OpenAI and Elasticsearch</title>
    <link>http://localhost:1313/posts/elastic-embeddings/</link>
    <pubDate>Wed, 27 Dec 2023 00:00:00 &#43;0000</pubDate>
    <author>Oliver Vea</author>
    <guid>http://localhost:1313/posts/elastic-embeddings/</guid>
    <description><![CDATA[Overview Recently, I&rsquo;ve been researching semantic search, since elasticsearch 8 has added support for doing vector search as part of an ordinary search request. I&rsquo;ve written a post about this topic, providing an introduction to the uninitiated.
I wanted to build a simple semantic search proof-of-concept project with OpenAI embeddings and searching with the elasticsearch knn option.
The result is this small project with an ASP.NET API, which allows for product ingestion and searching.]]></description>
</item>
<item>
    <title>Fuzzy Logic with Fluent Syntax</title>
    <link>http://localhost:1313/posts/fluent-fuzzy/</link>
    <pubDate>Mon, 28 Aug 2023 00:00:00 &#43;0000</pubDate>
    <author>Oliver Vea</author>
    <guid>http://localhost:1313/posts/fluent-fuzzy/</guid>
    <description><![CDATA[Overview FluentFuzzy is a .NET package for adding fuzzy logic to a project in an easily readable, fluent way. The project is freely available on Github.
I&rsquo;ve written an introductory post on fuzzy logic here, which explains the basic concept and how it works.
The project includes four source projects and a test project.
The FluentFuzzy project contains the code for the core logic and fluent syntax builder of the package.]]></description>
</item>
<item>
    <title>.NET package for code timing</title>
    <link>http://localhost:1313/posts/veachron/</link>
    <pubDate>Sun, 13 Nov 2022 00:00:00 &#43;0000</pubDate>
    <author>Oliver Vea</author>
    <guid>http://localhost:1313/posts/veachron/</guid>
    <description><![CDATA[Overview Veachron is an application which can help storing and displaying timings. The main use-case is for debugging, as it can be embedded into code and used to get actual timings. The project is freely available on Github.
The project consists of a Python application, using the Flask framework to host a REST API. The API is documented through swagger, to ensure ease of use.
The application can be hosted directly, but alternatively, two Docker images are provided, with the application and a PostgreSQL database, for storing the timer logs.]]></description>
</item>
</channel>
</rss>
